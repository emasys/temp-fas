{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { EActionTypes } from '../actions/types';\nexport var initialAuthState = {\n  loggedIn: {\n    email: '',\n    password: ''\n  }\n};\nexport default function auth() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuthState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case EActionTypes.LOGIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loggedIn: action.payload\n      });\n\n    case EActionTypes.RESET_STORE:\n      return initialAuthState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/emasys/Desktop/temp-fas/redux/reducers/auth.ts"],"names":["EActionTypes","initialAuthState","loggedIn","email","password","auth","state","action","type","LOGIN","payload","RESET_STORE"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAmBA,OAAO,IAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,QAAQ,EAAE;AAFF;AADoB,CAAzB;AAOP,eAAe,SAASC,IAAT,GAGN;AAAA,MAFPC,KAEO,uEAFQL,gBAER;AAAA,MADPM,MACO;;AACP,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAY,CAACS,KAAlB;AACE,6CACKH,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACG;AAFnB;;AAIF,SAAKV,YAAY,CAACW,WAAlB;AACE,aAAOV,gBAAP;;AAEF;AACE,aAAOK,KAAP;AAVJ;AAYD","sourcesContent":["import { EActionTypes } from '../actions/types';\nimport { ILogin } from '../actions/auth';\n\ninterface ILoginAction {\n  type: EActionTypes.LOGIN;\n  payload: ILogin;\n}\n\ninterface IResetAction {\n  type: EActionTypes.RESET_STORE;\n  payload: null;\n}\n\nexport interface IAuth {\n  loggedIn: ILogin;\n}\n\nexport type TAuthActions = ILoginAction | IResetAction;\n\nexport const initialAuthState = {\n  loggedIn: {\n    email: '',\n    password: '',\n  },\n};\n\nexport default function auth(\n  state: IAuth = initialAuthState,\n  action: TAuthActions\n): IAuth {\n  switch (action.type) {\n    case EActionTypes.LOGIN:\n      return {\n        ...state,\n        loggedIn: action.payload,\n      };\n    case EActionTypes.RESET_STORE:\n      return initialAuthState;\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}